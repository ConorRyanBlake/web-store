import { createSlice } from "@reduxjs/toolkit";

//Initial state for the cart slice
const initialState = {
  items: [], // Array to hold cart items
  totalCost: 0, // Total cost of all items in the cart
  shipmentMethod: "", // Selected shipment method
  shipmentCost: 0,
  shipmentOptions: [
    // Available shipment options with their details
    { id: 1, name: "Standard Shipping", cost: 30 },
    { id: 2, name: "Express Shipping", cost: 100 },
  ],
};

//Creating the cart slice using Redux toolkit
const cartSlice = createSlice({
  name: "cart", // Slice name
  initialState, // Initial state defined above
  reducers: {
    //Reducers function to add a product to the cart
    addToCart(state, action) {
      const product = action.payload;
      state.items.push(product); //Pushing products into the item array
      state.totalCost += product.price; //Increasing the total cost by the products price
    },

    //Reducer function to set the selected shipment method
    setShipmentMethod(state, action) {
      const selectedMethod = action.payload;
      const selectedOption = state.shipmentOptions.find(
        (option) => option.name === selectedMethod
      );
      state.shipmentMethod = selectedMethod;
      state.shipmentCost = selectedOption ? selectedOption.cost : 0;
    },

    clearCart(state) {
      state.items = [];
      state.totalCost = 0;
      state.shipmentMethod = null;
      state.shipmentCost = 0;
    },
  },
});

//Exporting actions creators generated by createSlice
export const { addToCart, setShipmentMethod } = cartSlice.actions;

// Selectors to retrieve specific parts of the cart state
export const selectCartItems = (state) => state.cart.items;
export const selectTotalCost = (state) => state.cart.totalCost;
export const selectShipmentOptions = (state) => state.cart.shipmentOptions;
export const selectShipmentMethod = (state) => state.cart.shipmentMethod;
export const selectShipmentCost = (state) => state.cart.shipmentCost;
export const { clearCart } = cartSlice.actions;

// Default export of the cart reducer function generated by createSlice
export default cartSlice.reducer;
